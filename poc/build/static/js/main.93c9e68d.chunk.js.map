{"version":3,"sources":["components/App/app.module.css","types/vm.js","actions/vm.js","reducers/vm.js","reducers/index.js","components/Modal/index.jsx","components/App/index.jsx","apis/vm.js","sagas/vm.js","sagas/index.js","configureStore.js","index.js","components/Modal/modal.module.css"],"names":["module","exports","VMS_FETCHED","VMS_FETCHED_SUCCEDDED","VM_FETCHED_STATUS","VM_FETCHED_STATUS_CLOSED","VM_DELETED","VM_POSTED","fetchVms","type","types","payload","fetchVmsSuccess","vms","defaultState","ip","undefined","combineReducers","modal","state","action","byId","newState","i","machineType","substring","lastIndexOf","order","Object","values","map","vm","form","reducerForm","getAllVMS","id","fromVM","getLog","connect","selectors","dispatch","closeModal","isOpen","onRequestClose","className","styles","content","overlayClassName","background","ariaHideApp","shouldCloseOnOverlayClick","url","code","display","position","required","value","FormInput","onChange","input","placeholder","meta","error","touched","Input","target","typeGas","text","column","FormSelect","options","classNamePrefix","name","label","header","link","AppCore","this","props","createVm","deleteVm","handleSubmit","fetchVmStatus","app","data","Card","CardBody","onSubmit","bind","CardTitle","Row","Col","sm","FormGroup","Field","component","validate","md","offset","Button","color","onClick","CardHeader","tag","Table","row","href","rel","size","publicIp","UncontrolledTooltip","delay","React","Component","App","reduxForm","selector","actions","tipo","URL","Promise","resolve","reject","fetch","then","resultado","ok","json","res","catch","method","vmsFetcher","vmsCreator","vmsDeleter","VmsSaga","call","api","response","put","message","takeLatest","mainSaga","all","fork","sagaMiddleware","createSagaMiddleware","configureStore","store","createStore","reducer","compose","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93c9e68d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__WPEG2\"};","export const VMS_FETCHED = 'VMS_FETCHED';\nexport const VMS_FETCHED_SUCCEDDED = 'VMS_FETCHED_SUCCEDDED';\nexport const VMS_FETCHED_FAILED = 'VMS_FETCHED_FAILED';\n\nexport const VM_FETCHED_STATUS = 'VM_FETCHED_STATUS';\nexport const VM_FETCHED_STATUS_CLOSED = 'VM_FETCHED_STATUS_CLOSED';\nexport const VM_FETCHED_STATUS_SUCCEDDED = 'VM_FETCHED_STATUS_SUCCEDDED';\nexport const VM_FETCHED_STATUS_FAILED = 'VM_FETCHED_STATUS_FAILED';\n\nexport const VM_DELETED = 'VM_DELETED';\nexport const VM_DELETED_SUCCEDDED = 'VM_DELETED_SUCCEDDED';\nexport const VM_DELETED_FAILED = 'VM_DELETED_FAILED';\n\nexport const VM_POSTED = 'VM_POSTEDED';\nexport const VM_POSTED_SUCCEDDED = 'VM_POSTEDED_SUCCEDDED';\nexport const VM_POSTED_FAILED = 'VM_POSTEDED_FAILED';","import * as types from '../types/vm';\n\nexport const fetchVms = () => ({\n  type: types.VMS_FETCHED,\n  payload:{\n\n  }\n});\n  \nexport const fetchVmsSuccess = ({\n  vms,\n}) => ({\n  type: types.VMS_FETCHED_SUCCEDDED,\n  payload:{\n    vms\n  }\n});\n\nexport const fetchVmsFail = ({\n  message,\n}) => ({\n  type: types.VMS_FETCHED_FAILED,\n  payload:{\n    message,\n  }\n});\n\nexport const fetchVmStatus = ({\n  ip,\n}) => ({\n  type: types.VM_FETCHED_STATUS,\n  payload:{\n    ip,\n  }\n});\n\nexport const closeVmStatus = () => ({\n  type: types.VM_FETCHED_STATUS_CLOSED,\n  payload:{}\n});\n  \nexport const fetchVmStatusSuccess = ({\n  log,\n}) => ({\n  type: types.VM_FETCHED_STATUS_SUCCEDDED,\n  payload:{\n    log,\n  }\n});\n\nexport const fetchVmStatusFail = ({\n  message,\n}) => ({\n  type: types.VM_FETCHED_STATUS_FAILED,\n  payload:{\n    message,\n  }\n});\n\nexport const createVm = ({\n  name,\n  type\n}) => ({\n  type: types.VM_POSTED,\n  payload: {\n    name,\n    type\n  },\n});\n\nexport const createVmFail = ({\n  message,\n}) => ({\n  type: types.VM_POSTED_SUCCEDDED,\n  payload: {\n    message,\n  },\n});\n\nexport const deleteVm = ({\n  name,\n}) => ({\n  type: types.VM_DELETED,\n  payload: {\n    name,\n  },\n});\n\nexport const deleteVmFail = ({\n  message,\n}) => ({\n  type: types.VM_DELETED_FAILED,\n  payload: {\n    message,\n  },\n});\n","import { combineReducers } from 'redux';\nimport * as types from '../types/vm';\n\nconst defaultState = {\n  ip: undefined,\n}\n\n\nconst modal = (state = defaultState, action) => {\n  switch (action.type) {\n    case types.VM_FETCHED_STATUS: {\n      const {\n        payload: {\n          ip,\n        },\n      } = action;\n      return {ip};\n    }\n    case types.VM_FETCHED_STATUS_CLOSED: {\n      return defaultState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst byId = (state={}, action) => {\n  switch (action.type) {\n    case types.VMS_FETCHED: {\n      return {};\n    }\n    case types.VMS_FETCHED_SUCCEDDED: {\n      const {\n        payload: {\n          vms,\n        },\n      } = action;\n      const newState = {}\n      for (let i in vms) {\n        newState[i] = {\n          ...vms[i],\n          machineType: vms[i].machineType.substring(vms[i].machineType.lastIndexOf('/')+1)\n        };\n      }\n      return newState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nconst order = (state=[], action) => {\n  switch (action.type) {\n    case types.VMS_FETCHED: {\n      return [];\n    }\n    case types.VMS_FETCHED_SUCCEDDED: {\n      const {\n        payload: {\n          vms,\n        },\n      } = action;\n      const newState = Object.values(vms).map((vm, i) => i);\n      return newState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\n\n\nexport default combineReducers({\n  modal,\n  byId,\n  order\n})\n\n//selectores\nexport const getAllVMS = (state) => state.order.map((id) => state.byId[id])\nexport const getLog = (state) => state.modal.ip;\n\n","import { combineReducers } from 'redux';\nimport { reducer as reducerForm } from 'redux-form';\nimport vm, * as fromVM from './vm';\n\nexport default combineReducers({\n  vm,\n  form: reducerForm,\n});\n\nexport const getAllVMS = (state) => fromVM.getAllVMS(state.vm);\nexport const getLog = (state) => fromVM.getLog(state.vm);\n","import React from 'react';\nimport ModalComponent from 'react-modal';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/vm';\nimport * as selectors from '../../reducers';\nimport Iframe from 'react-iframe'\n\nimport styles from './modal.module.css';\n\nconst Modal = ({\n  closeModal,\n  ip,\n}) => (\n  <ModalComponent\n    isOpen={ip}\n    onRequestClose={closeModal}\n    className={styles.content}\n    overlayClassName={styles.background}\n    ariaHideApp={false}\n    shouldCloseOnOverlayClick={true}\n  >\n    <Iframe url={`http://${ip}:8000/logs.txt`}\n        id=\"myId\"\n        className={styles.code}\n        display=\"initial\"\n        position=\"relative\"\n        \n    />\n  </ModalComponent>\n);\n\nexport default connect(\n  (state) => ({\n    ip: selectors.getLog(state),\n  }),\n  (dispatch) => ({\n    closeModal() {\n      dispatch(actions.closeVmStatus());\n    },\n  }),\n)(Modal);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field  } from 'redux-form';\nimport Select from \"react-select\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Table,\n  FormGroup,\n  Input,\n  Row,\n  Col,\n  UncontrolledTooltip\n} from \"reactstrap\";\nimport Modal from '../Modal';\nimport * as selector from '../../reducers';\nimport * as actions from '../../actions/vm';\nimport styles from './app.module.css';\n\nconst required = (value) => (value ? undefined : 'Requerido*');\n\nconst FormInput = ({\n  input: { onChange },\n  placeholder,\n  type,\n  value,\n  meta: {\n    error,\n    touched,\n  }\n}) => (\n  <>\n    <Input\n      type={type}\n      placeholder={placeholder}\n      value={value}\n      onChange={({ target }) => onChange(target.value)}\n    />\n    <label className=\"error\">{touched && error}</label>\n  </>\n);\n\nconst typeGas = [\n  {\n    text:'e1-micro',\n    column:'e1-micro',\n  },\n  {\n    text: 'e1-small',\n    column: 'e1-small',\n  },\n  {\n    text: 'e1-medium',\n    column: 'e1-medium',\n  },\n]\n\nconst FormSelect = ({\n  input: { onChange },\n  placeholder,\n  value,\n  options,\n  meta: {\n    error,\n    touched,\n  }\n}) => (\n  <>\n    <Select\n      className=\"react-select info\"\n      classNamePrefix=\"react-select\"\n      onChange={value => onChange(value.name)}\n      value={value}\n      options={typeGas.map(column => {\n        return {\n          name: column,\n          label: column.text,\n        }\n      })}\n      placeholder={placeholder}\n    />\n    <label className=\"error\">{touched && error}</label>\n  </>\n);\n\nconst header = [\n  /**\n  {\n    text: 'ID', \n    column: 'id', \n  },\n   */\n  {\n    text: 'Nombre',\n    column: 'name',\n  },\n  {\n    text: 'Tipo',\n    column: 'machineType',\n  },\n  {\n    text: 'IP',\n    column: 'publicIp',\n    link: true,\n  },\n  {\n    text: 'día creado',\n    column: 'dateCreated',\n  },\n]\n\nclass AppCore extends React.Component {\n  componentDidMount() {\n    const {\n      fetchVms,\n    } = this.props;\n    fetchVms();\n  }\n\n  render () {\n    const {\n      createVm,\n      deleteVm,\n      handleSubmit,\n      fetchVms,\n      vms,\n      fetchVmStatus,\n    } = this.props;\n    return (\n      <div \n        className={`main-panel ${styles.app}`}\n        data=\"blue\"\n      >\n        <Modal />\n          <Card>\n            <CardBody>\n            <form onSubmit={handleSubmit(createVm.bind(this))}>\n              <CardTitle>\n                Crear Instancia\n              </CardTitle>\n              <Row>\n                  <Col sm=\"11\">\n                    <Row>\n                      <Col>\n                        <FormGroup >\n                          <Field\n                            name='name'\n                            component={FormInput}\n                            placeholder=\"nombre\"\n                            validate={[required]}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col >\n                        <FormGroup>\n                          <Field\n                            name='tipo'\n                            component={FormSelect}\n                            placeholder=\"tipo\"\n                            validate={[required]}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col >\n                        <FormGroup>\n                          <Field\n                            name='repo'\n                            component={FormInput}\n                            placeholder=\"repo\"\n                            validate={[required]}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md={{offset:1}}>\n                        <Button \n                          color=\"info\"\n                          type=\"submit\"\n                        >\n                          Agregar\n                        </Button>\n                        <Button \n                          color=\"info\"\n                          onClick={fetchVms.bind(this)}\n                        >\n                          Cargar\n                        </Button>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </form>\n            </CardBody>\n          </Card>\n          <Row>\n            <Col md=\"12\">\n              <Card>\n                <CardHeader>\n                  <CardTitle tag=\"h4\">\n                    Instancias:\n                  </CardTitle>\n                </CardHeader>\n                <CardBody>\n                  <Table>\n                    <thead className=\"text-primary\">\n                      <tr>\n                        {\n                          header.map((column) => (\n                            <th className={column.className}>\n                              <p>\n                                {column.text}\n                              </p>\n                            </th>\n                          ))\n                        }\n                        <th className=\"text-right\">Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {\n                        vms.map((row) => (\n                          <tr>\n                            { \n                              header.map((column) => (\n                                <td className={column.className}>\n                                  {\n                                    column.link ? (\n                                      <a\n                                        href={`http://${row[column.column]}:8080/blue/organizations/jenkins/pipelines`}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                      >\n                                          http://{row[column.column]}\n                                        </a>\n                                    ) : (\n                                      <p>\n                                        {row[column.column]}\n                                      </p>\n                                    )\n                                  }\n                                </td>\n                              ))\n                            }\n                            <td className=\"text-right\">\n                              <Button\n                                className=\"btn-link\"\n                                color=\"success\"\n                                id=\"tooltip1\"\n                                size=\"sm\"\n                                onClick={() => fetchVmStatus(row.publicIp)}\n                              >\n                                <i className=\"tim-icons icon-pencil\" />\n                              </Button>\n                              <UncontrolledTooltip\n                                delay={0}\n                                target=\"tooltip1\"\n                              >\n                                Revisar\n                              </UncontrolledTooltip>\n                              <Button\n                                className=\"btn-link\"\n                                color=\"danger\"\n                                id=\"tooltip2\"\n                                size=\"sm\"\n                                onClick={() => deleteVm(row.name)}\n                              >\n                                <i className=\"tim-icons icon-simple-remove\" />\n                              </Button>\n                              <UncontrolledTooltip\n                                delay={0}\n                                target=\"tooltip2\"\n                              >\n                                Eliminar\n                              </UncontrolledTooltip>\n                          </td>\n                        </tr>\n                        ))\n                      }\n                    </tbody>\n                  </Table>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n      </div>\n    )\n  }\n}\n\nconst App = reduxForm({\n  form: \"App\"\n})(AppCore)\n\nexport default connect(\n  (state) => ({\n    vms: selector.getAllVMS(state),\n  }),\n  (dispatch) => ({\n    fetchVms(){\n      dispatch(actions.fetchVms());\n    },\n    fetchVmStatus(ip){\n      dispatch(actions.fetchVmStatus({\n        ip,\n      }));\n    },\n    createVm(values){\n      dispatch(actions.createVm(({\n        ...values,\n        type: values.tipo.column,\n      })));\n    },\n    deleteVm(name){\n      dispatch(actions.deleteVm({\n        name\n      }));\n    },\n  }),\n)(App);\n","\nconst URL = 'http://localhost:4000';\n\nexport const fetchVms = () => new Promise((resolve, reject) => {\n  fetch(`${URL}/vms/`).then((resultado) => {\n    if (resultado.ok) {\n      resultado.json().then((res) => resolve(res));\n    } else {\n      resultado.json().then((error) => reject(error));\n    }\n  }).catch((error) => reject(error));\n});\n\nexport const fetchVmStatus = (\n  ip\n) => fetch(`http://${ip}:8000/logs.txt`, ).then((resultado) => {\n    console.log(resultado)\n});\n  \nexport const createVm = (\n  name,\n  type,\n) => new Promise((resolve, reject) => {\n  fetch(`${URL}/createvm?name=${name}&type=${type}`, {\n    method: 'POST',\n  }).then((resultado) => {\n    if (resultado.ok) {\n      resultado.json().then((res) => resolve(res));\n    } else {\n      resultado.json().then((error) => reject(error));\n    }\n  }).catch((error) => reject(error));\n});    \n  \n  \nexport const deleteVm = (\n  name,\n) => new Promise((resolve, reject) => {\n  fetch(`${URL}/deletevm?name=${name}`, {\n    method: 'POST',\n  }).then((resultado) => {\n    if (resultado.ok) {\n      resultado.json().then((res) => resolve(res));\n    } else {\n      resultado.json().then((error) => reject(error));\n    }\n  }).catch((error) => reject(error));\n});\n","import {\n  put,\n  takeLatest,\n  call,\n} from 'redux-saga/effects';\nimport * as types from '../types/vm';\nimport * as actions from '../actions/vm';\nimport * as api from '../apis/vm';\n\nfunction* vmsFetcher() {\n  try {\n    const response = yield call(\n      api.fetchVms,\n    );\n    yield put(actions.fetchVmsSuccess({\n      vms: response,\n    }));\n  } catch (error) {\n    yield put(actions.fetchVmsFail({\n      message: error.message,\n    }));\n  }\n}\n  /**\n\nfunction* vmStatusFetcher(action) {\n  const {\n    payload: {\n      ip,\n    },\n  } = action;\n  const response = yield call(\n    api.fetchVmStatus,\n    '34.67.71.239',\n  );\n  console.log(response);\n  yield put(actions.fetchVmStatusSuccess({\n    log: response,\n  }));\n  try {\n    \n  } catch (error) {\n    yield put(actions.fetchVmStatusFail({\n      message: error,\n    }));\n  }\n}\n  */\n\nfunction* vmsCreator(action) {\n  const {\n    payload: {\n      name,\n      type,\n    },\n  } = action;\n  try {\n    const { response } = yield call(\n      api.createVm,\n      name,\n      type,\n    );\n    yield put(actions.fetchVmsSuccess({\n      vms: response,\n    }));\n  } catch (error) {\n    yield put(actions.createVmFail({\n      message: error.message,\n    }))\n  }\n}\n\nfunction* vmsDeleter(action) {\n  const {\n    payload: {\n      name,\n    },\n  } = action;\n  try {\n    yield call(\n      api.deleteVm,\n      name\n    );\n    yield put(actions.fetchVms());\n  } catch (error) {\n    yield put(actions.deleteVmFail({\n      message: error.message,\n    }))\n  }\n}\n\nfunction* VmsSaga() {\nyield takeLatest(\n  types.VMS_FETCHED,\n  vmsFetcher,\n);\n/**\nyield takeLatest(\n  types.VM_FETCHED_STATUS,\n  vmStatusFetcher,\n);\n */\nyield takeLatest(\n  types.VM_POSTED,\n  vmsCreator,\n);\nyield takeLatest(\n  types.VM_DELETED,\n  vmsDeleter,\n);\n}\n\nexport default VmsSaga;","import { fork, all } from 'redux-saga/effects';\nimport VmsSaga from './vm';\n\nfunction* mainSaga() {\n  yield all([\n    fork(VmsSaga),\n  ]);\n}\n\nexport default mainSaga;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from './reducers';\nimport mainSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configureStore = () => {\n  const store = createStore(\n    reducer,\n    compose(\n      applyMiddleware(sagaMiddleware), \n      // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), \n    ),\n  );\n\n  sagaMiddleware.run(mainSaga);\n\n  return store;\n};\n\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport configureStore from './configureStore';\nimport './index.css';\nimport \"./assets/css/nucleo-icons.css\";\nimport \"./assets/scss/black-dashboard-pro-react.scss?v=1.1.0\";\nimport \"./assets/demo/demo.css\";\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"modal_background__2hWb4\",\"content\":\"modal_content__1yKzo\",\"code\":\"modal_code__1uBmN\"};"],"sourceRoot":""}